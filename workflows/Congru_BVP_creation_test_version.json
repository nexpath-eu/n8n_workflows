{
  "createdAt": "2025-08-02T13:13:43.447Z",
  "updatedAt": "2025-08-17T12:11:15.134Z",
  "id": "TrE3UEFryHYNObuv",
  "name": "Congru BVP creation-ŸÜÿ≥ÿÆŸá ÿØÿ± ÿ≠ÿßŸÑ ÿ™ÿ≥ÿ™",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "jsCode": "const allResults = $input.all();\nconst firstResult = allResults[0].json;\n\nlet commodityTitle = '';\nlet targetMarket = '';\nlet detectedLanguage = 'english';\n\ntry {\n  const searchQueriesData = $('Generate Search Queries').item.json;\n  commodityTitle = searchQueriesData.commodityTitle || '';\n  targetMarket = searchQueriesData.targetMarket || '';\n  detectedLanguage = searchQueriesData.detectedLanguage || 'english';\n} catch (error) {\n  detectedLanguage = firstResult.detectedLanguage || 'english';\n  commodityTitle = firstResult.commodityTitle || firstResult['Commodity Title'] || '';\n  targetMarket = firstResult.targetMarket || firstResult['Target Market'] || '';\n}\n\nlet allSearchResults = [];\nallResults.forEach(result => {\n  if (result.json.items && Array.isArray(result.json.items)) {\n    const googleResults = result.json.items.map(item => ({\n      title: item.title,\n      link: item.link,\n      snippet: item.snippet,\n      displayLink: item.displayLink,\n      source: 'google'\n    }));\n    allSearchResults = allSearchResults.concat(googleResults);\n  }\n});\n\nconst generateMarketLeadersRTF = (companies, informationalSites) => {\n  let rtf = '';\n  rtf += `‚îÅ‚îÅ‚îÅ MARKET LEADERS ‚îÅ‚îÅ‚îÅ\\n\\n`;\n  \n  if (companies.length > 0) {\n    rtf += `üè≠ Companies & Manufacturers:\\n\\n`;\n    companies.slice(0, 15).forEach((company, index) => {\n      rtf += `${index + 1}. ${company.companyName || company.domain}\\n`;\n      rtf += `   üìç ${company.url}\\n`;\n      rtf += `   üìù ${company.description}\\n`;\n      rtf += `   üîç Source: ${company.source}\\n\\n`;\n    });\n  }\n  \n  return rtf.trim();\n};\n\nreturn {\n  json: {\n    \"Commodity Title\": commodityTitle || \"ERROR: No Commodity Title Found\",\n    \"Market Leaders\": generateMarketLeadersRTF([], []),\n    \"Status\": \"Done\"\n  }\n};"
      },
      "id": "9f559464-c749-4f84-99bf-d4b892272f2f",
      "name": "Process Search Results",
      "type": "n8n-nodes-base.code",
      "position": [3168, 160],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "id": "9fd29c41-a180-4ccd-80ab-1cbb108ab2e8",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [1024, 0],
      "typeVersion": 1.2
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Process Search Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "df94e28f-48ce-44aa-9c37-135efff6212b",
  "triggerCount": 1,
  "tags": ["Congru", "Testing"]
}
